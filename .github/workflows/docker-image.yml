name: Docker CI/CD Pipeline

# Xác định sự kiện trigger cho pipeline, trong trường hợp này là push lên nhánh main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


# Định nghĩa các jobs cần thực hiện 
jobs:
   # Job 1: build và test
   # Job thực thi trên máy ảo ubuntu
  build_and_test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        # Sử dụng action "checkout" để sao copy code từ repository vào máy ảo Ubuntu
        uses: actions/checkout@v2

      - name: Login to Docker Hub
          # Sử dụng action "docker/login-action" để đăng nhập vào Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and test
        # Build và test image được build ra bằng Docker 
        run: |
          docker build -t film1080 .
          
      - name: Run tests in Docker container
        # Chạy test trong container
        run: docker run --rm film1080 python manage.py test
        
      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        # Sử dụng action "docker/build-push-action" để đẩy image lên Docker Hub
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/film1080:${{ github.sha }}

  # Job 2: Deploy
  deploy:
    needs: build_and_test
    runs-on: ubuntu-22.04
  
    steps:
      - name: Deploy to server
       # Sử dụng action "appleboy/ssh-action" để triển khai image lên server thông qua SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull image mà được push lên DockerHub bên trên
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/film1080:${{ github.sha }}
    
            # Dừng và gỡ bỏ tất cả các container hiện tại sử dụng image film1080 (nếu có)
            containers=$(sudo docker ps -q --filter "ancestor=${{ secrets.DOCKERHUB_USERNAME }}/film1080")
            if [ -n "$containers" ]; then
              sudo docker stop $containers
              sudo docker rm $containers
            fi
    
            # Chạy container mới với image đã pull về bên trên
            sudo docker run -d -p 2004:8000 --restart always --name film1080 ${{ secrets.DOCKERHUB_USERNAME }}/film1080:${{ github.sha }}


